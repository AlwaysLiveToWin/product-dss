<!--
  ~ Copyright 2005-2007 WSO2, Inc. (http://wso2.com)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<html>
    <body>
        <p>[<a
                href="http://wso2.org/downloads/solutions/data-services">Download</a>]
            | [<a href="../index_docs.html">Documentation Home</a>] | [<a
                href="../release_notes.html">Release Note</a>]
        </p>
        <h1>Custom Datasource Support</h1>
        <h2>Introduction</h2>
        <p>
            <a href="http://wso2.org/projects/data-services-server/java">WSO2 Data Services Server</a> features custom datasource support to interface data services with any type of datasources available. There are two options in writing a custom datasource:
	      <ul>
		<li>Tabular Based Datasources</li>
		<li>Custom Query Based Datasources</li>
	      </ul>
        </p>
	<h2>Tabular Data Based Datasources</h2>
	<p>
	  The tabular data based datasources are meant to be created, when you have a datasource which represents its data using tables. Where a set a named tables contains data rows that can be queried later. To implement these type of datasources, the interface <a href="https://svn.wso2.org/repos/wso2/carbon/platform/branches/4.2.0/components/data-services/org.wso2.carbon.dataservices.core/4.2.0/src/main/java/org/wso2/carbon/dataservices/core/custom/datasource/TabularDataBasedDS.java">org.wso2.carbon.dataservices.core.custom.datasource.TabularDataBasedDS</a> has to be implemented. A sample implementation of this type of a custom datasource can be seen at <a href="https://svn.wso2.org/repos/wso2/carbon/platform/branches/4.2.0/components/data-services/org.wso2.carbon.dataservices.core/4.2.0/src/main/java/org/wso2/carbon/dataservices/core/custom/datasource/InMemoryDataSource.java">InMemoryDataSource</a>. When a tabular data based datasource is created, it will be associated with a data services query which has an SQL query, this is done by internally using our own SQL parser to execute SQL against the custom datasource. A sample data service descriptor on how this is done can be found at <a href="https://svn.wso2.org/repos/wso2/carbon/platform/branches/turing/products/dss/3.1.1/modules/samples/dbs/inmemory/InMemoryDSSample.dbs">InMemoryDSSample</a>. Also this is also supported with Carbon datasources, with the datasource reader implementation <code>org.wso2.carbon.dataservices.core.custom.datasource.CustomTabularDataSourceReader</code>. A sample of a Carbon datasource configuration file can be found at <a href="https://svn.wso2.org/repos/wso2/carbon/platform/branches/turing/products/dss/3.1.1/modules/distribution/src/conf/custom-datasources.xml">custom-datasources.xml</a>, which ships as a sample with WSO2 DSS.
        </p>
	<h2>Custom Query Based Datasources</h2>
	<p>
	  The custom query based datasources are meant to be created, when you have a datasource which has some form of a query expression support. Also, basically any non-tabular data based datasource can be created with this type. Even if the target datasource do not have query expression format, you can create your own one and use that. So for example, any NoSQL type datasource can be supported using this type of a datasource. To implement these type of datasources, the interface <a href="https://svn.wso2.org/repos/wso2/carbon/platform/branches/4.0.0/components/data-services/org.wso2.carbon.dataservices.core/4.0.2/src/main/java/org/wso2/carbon/dataservices/core/custom/datasource/CustomQueryBasedDS.java">org.wso2.carbon.dataservices.core.custom.datasource.CustomQueryBasedDS</a> has to be implemented. A sample implementation of this type of a custom datasource can be seen at <a href="https://svn.wso2.org/repos/wso2/carbon/platform/branches/4.0.0/components/data-services/org.wso2.carbon.dataservices.core/4.0.2/src/main/java/org/wso2/carbon/dataservices/core/custom/datasource/EchoDataSource.java">EchoDataSource</a>. A sample data service descriptor with custom query datasources in action can be found at <a href="https://svn.wso2.org/repos/wso2/carbon/platform/branches/turing/products/dss/3.1.1/modules/samples/dbs/inmemory/InMemoryDSSample.dbs">InMemoryDSSample</a>. This is supported in Carbon datasources, with the datasource reader implementation <code>org.wso2.carbon.dataservices.core.custom.datasource.CustomQueryDataSourceReader</code>. A sample of a Carbon datasource configuration file can be found at <a href="https://svn.wso2.org/repos/wso2/carbon/platform/branches/turing/products/dss/3.1.1/modules/distribution/src/conf/custom-datasources.xml">custom-datasources.xml</a>.
        </p>
	<p>
	  <b>NOTE:-</b><br/>
	  All the custom datasources, in its implementation "init" method, the user supplied properties will be parsed in to initialize the datasource accordingly, also a specific property named "__DATASOURCE_ID__" will be parsed in, which contains an UUID to uniquely identify the current datasource. This can be used by custom datasource authors for any required functionality to identify the datasources accordingly, for example, scenarios like, datasource instances communicating within a server cluster for data synchronization.
        </p>
    </body>
</html>
